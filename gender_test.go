package gender

import "testing"

// List of genders lifted from
// http://genderfluidsupport.tumblr.com/gender
var genders = []string{
	"Abimegender",
	"Adamasgender",
	"Aerogender",
	"Aesthetigender",
	"Affectugender",
	"Agender",
	"Agenderflux",
	"Alexigender",
	"Aliusgender",
	"Amaregender",
	"Ambigender",
	"Ambonec",
	"Amicagender",
	"Androgyne",
	"Anesigender",
	"Angenital",
	"Anogender",
	"Anongender",
	"Antegender",
	"Anxiegender",
	"Apagender",
	"Apconsugender",
	"Astergender",
	"Astralgender",
	"Autigender",
	"Autogender",
	"Axigender",
	"Bigender",
	"Biogender",
	"Blurgender",
	"Boyflux",
	"Burstgender",
	"Caelgender",
	"Cassgender",
	"Cassflux",
	"Cavusgender",
	"Cendgender",
	"Ceterofluid",
	"Ceterogender",
	"Cisgender",
	"Cloudgender",
	"Collgender",
	"Colorgender",
	"Commogender",
	"Condigender",
	"Deliciagender",
	"Demifluid",
	"Demiflux",
	"Demigender",
	"Domgender",
	"Demi-vapor",
	"Demi-smoke",
	"Duragender",
	"Egogender",
	"Epicene",
	"Espigender",
	"Exgender",
	"Existigender",
	"Femfluid",
	"Femgender",
	"Fluidflux",
	"Gemigender",
	"Genderblank",
	"Genderflow",
	"Genderfluid",
	"Genderflux",
	"Genderfuzz",
	"Gender Neutral",
	"Genderpunk",
	"Genderqueer",
	"Genderwitched",
	"Girlflux",
	"Glassgender",
	"Glimragender",
	"Greygender",
	"Gyragender",
	"Healgender",
	"Heliogender",
	"Hemigender",
	"Horogender",
	"Hydrogender",
	"Imperigender",
	"Intergender",
	"Juxera",
	"Libragender",
	"Magigender",
	"Mascfluid",
	"Mascgender",
	"Maverique",
	"Mirrorgender",
	"Molligender",
	"Multigender",
	"Nanogender",
	"Neutrois",
	"Nonbinary",
	"Omnigender",
	"Oneirogender",
	"Pangender",
	"Paragender",
	"Perigender",
	"Polygender",
	"Proxvir",
	"Quoigender",
	"Subgender",
	"Surgender",
	"Systemgender",
	"Tragender",
	"Transgender",
	"Trigender",
	"Vapogender",
	"Venngender",
	"Verangender",
	"Vibragender",
	"Vocigender",
}

func TestValid(t *testing.T) {
	for _, gender := range genders {
		valid := Valid(gender)
		if !valid {
			t.Errorf("Valid() returns wrong result for '%s', got %v, expected true", gender, valid)
		}
	}
}

func TestValidError(t *testing.T) {
	for _, gender := range genders {
		err := Validate(gender)
		if err != nil {
			t.Errorf("Valid() returns wrong result for '%s', got '%s', expected nil", gender, err.Error())
		}
	}
}
